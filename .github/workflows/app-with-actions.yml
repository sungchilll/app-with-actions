name: Deploy to AWS EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Naming jar file
      run: mv ./target/*.jar ./target/app.jar

    - name: Check jar file
      run: ls ./target  # This step checks the target folder to confirm the file exists.

    - name: Upload jar as artifact
      uses: actions/upload-artifact@v4
      with:
        name: app.jar
        path: ./target/app.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: app.jar

    - name: Check downloaded artifact
      run: ls -l  # This step confirms if the artifact is correctly downloaded to the runner.

    - name: From GitHub Actions to EC2 through SCP
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: ./app.jar
        target: /home/ubuntu/app

    - name: Connecting EC2 through SSH and installing JDK
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script_stop: true
        script: |
          # Install JDK 17 if not already installed
          if ! java -version 2>&1 | grep -q "17"; then
            sudo apt update
            sudo apt install -y openjdk-17-jdk
          fi
          # Prepare the app directory
          rm -rf /home/ubuntu/app/deploy
          mkdir -p /home/ubuntu/app/deploy
          mv /home/ubuntu/app/app.jar /home/ubuntu/app/deploy/app.jar
          cd /home/ubuntu/app/deploy
          sudo fuser -k -n tcp 8080 || true
          nohup java -jar app.jar > ./output.log 2>&1 &
          rm -rf /home/ubuntu/app
