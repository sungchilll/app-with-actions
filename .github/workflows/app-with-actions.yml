name: App-with-actions

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스코드 체크아웃
      - uses: actions/checkout@v4

      # 2. JDK 17 설정 (로컬 CI 빌드 용도)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # 3. Maven 빌드
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # 4. 산출물(app.jar) 이름 변환
      - name: Rename jar file
        run: mv ./target/*.jar ./target/app.jar

      # 5. 빌드 결과 확인
      - name: Check jar file
        run: ls -al ./target

      # 6. (옵션) 아티팩트 업로드
      - uses: actions/upload-artifact@v4
        with:
          name: app.jar
          path: ./target/app.jar
    
      # 7. SCP로 EC2에 배포
      - name: From Github Actions to AWS EC2 via SCP
        uses: appleboy/scp-action@v0.1.7
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ./target/app.jar
          target: /home/ubuntu/app  # /home/ubuntu/app 폴더에 app.jar 업로드

      # 8. SSH로 접속해 자바 설치 & 배포 스크립트 실행
      - name: Connect to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            # 1) 자바 17 설치
            sudo apt-get update -y
            sudo apt-get install -y openjdk-17-jdk

            # 2) JAVA_HOME 환경 변수 설정 (우분투 기준 경로)
            echo 'JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"' | sudo tee -a /etc/environment
            echo 'PATH="$JAVA_HOME/bin:$PATH"' | sudo tee -a /etc/environment
            source /etc/environment
            
            # 3) 애플리케이션 배포
            rm -rf /home/ubuntu/app/deploy
            mkdir -p /home/ubuntu/app/deploy
            mv /home/ubuntu/app/app.jar /home/ubuntu/app/deploy/app.jar
            cd /home/ubuntu/app/deploy

            # 4) 포트 충돌 방지
            sudo fuser -k -n tcp 8080 || true

            # 5) 백그라운드로 자바 실행
            nohup java -jar app.jar > ./output.log 2>&1 &

            # 필요하다면 오래된 폴더 정리
            # rm -rf /home/ubuntu/app
