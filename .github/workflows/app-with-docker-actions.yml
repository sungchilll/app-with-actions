name: App With Github Actions with Docker CI/CD

on: push

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Naming jar file
        run: mv ./target/*.jar ./target/app.jar

      - name: Check jar file
        run: ls ./target

      - uses: actions/upload-artifact@v4
        with:
          name: app
          path: ./target/*.jar

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app-with-actions:v1.0
          platforms: linux/amd64,linux/arm64

  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: Execute deployment script
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            if ! java -version 2>&1 | grep -q "17"; then
              sudo apt update
              sudo apt install -y openjdk-17-jdk
              echo "JDK 17 installed."
              echo 'JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"' | sudo tee -a /etc/environment
              echo 'PATH="$JAVA_HOME/bin:$PATH"' | sudo tee -a /etc/environment
              source /etc/environment
              echo "JAVA_HOME set to $JAVA_HOME"
            else
              echo "JDK 17 already installed."
            fi
            if ! command -v docker &> /dev/null
            then 
              echo "Docker is not installed. Installing Docker..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              echo "Docker installed successfully."
            else
              echo "Docker is already installed."
            fi
            if ! groups $USER | grep -q "\bdocker\b"; then
              echo "Adding user to the docker group..."
              sudo groupadd docker || true
              sudo usermod -aG docker $USER
              echo "User added to the docker group. Please log out and log back in for the changes to take effect."
            else
              echo "User is already in the docker group."
            fi
            newgrp docker
            CONTAINER_NAME="app-with-actions"
            if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
              echo "Stopping and removing existing container..."
              docker stop $CONTAINER_NAME
              docker rm $CONTAINER_NAME
            fi
            IMAGE_NAME="sungchilll/app-with-actions:v1.0"
            echo "Pulling Docker image: $IMAGE_NAME..."
            docker pull $IMAGE_NAME
            sudo fuser -k -n tcp 8080 || true
            echo "Running Docker container..."
            docker run -d \
              --name $CONTAINER_NAME \
              -p 8080:8080 \
              $IMAGE_NAME
            echo "Container is running. Use the following command to check logs:"
            echo "docker logs -f $CONTAINER_NAME"
